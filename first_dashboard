/*
Objectives

*/ 

with icd_crosswalk as
(
  select distinct description,
         code
  from postgres.public.conditions
),

flu as
(
  select patient,
	     min(date) as date
  from postgres.public.immunizations
  where date between '2022-01-01 00:00' and '2023-01-01 00:00'
    and code = '5302' -- This is the seasonal flu vaccine
  group by patient
),

covid as
(
  select patient,
	     date,
	     row_number() over (partition by patient order by date asc) as seq
  from postgres.public.immunizations
  where 1=1 
	and lower(description) like '%covid%'
),

covid_final as
(
	select patient,
	       date
	from covid
	where seq = 2 
)

select enc.id as encounter_id,
       enc.encounterclass,
	   enc.description as enc_type,
	   enc.base_encounter_cost,
	   enc.start,
	   enc.stop,
	   case when flu.date < enc.start then 1
	        else 0
			end as flu_2022,
	   case when cov.date < enc.start then 1
	        else 0
			end as covid,
	   icd.description as enc_reason,
	   pay.name as payer,
	   pay.ownership as payer_category,
	   pat.birthdate,
	   pat.first,
	   pat.last,
	   pat.zip,
	   pat.race,
	   pat.ethnicity,
	   pat.id as patient_id
from postgres.public.encounters as enc
left join postgres.public.payers as pay
  on enc.payer = pay.id
left join postgres.public.patients as pat
  on enc.patient = pat.id
join icd_crosswalk as icd
  on enc.reasoncode = icd.code
left join flu
  on enc.patient = flu.patient
left join covid_final as cov
  on enc.patient = cov.patient
where enc.stop >= '2022-01-01 00:00'
  and enc.stop <  '2023-01-01 00:00'
